{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CI/CD pipeline",
    "Metadata": {},
    "Parameters": {
      "ProjectZip": {
        "Type": "String",
        "Default": "project.zip",
        "Description": "Name of the zipfile with packer project"
      },
      "ProductionS3URL": {
        "Type": "String",
        "Description": "S3 URL to upload production package to"
      },
      "ProductionKmsKeyId": {
        "Type": "String",
        "Description": "KMS key from PROD account to encrypt artifacts",
        "Default": "XXXXXX"
      }
    },
    "Mappings": {},
    "Conditions": {},
    "Resources": {
      "codePipeLineServiceRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/AWSCodePipelineFullAccess"
          ],
          "Path": "/",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "codepipeline.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      },
      "codePipeLineServicePolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "s3:GetObject",
                  "s3:GetObjectVersion",
                  "s3:GetBucketVersioning"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "s3:PutObject"
                ],
                "Resource": [
                  "*"
                ],
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codecommit:CancelUploadArchive",
                  "codecommit:GetBranch",
                  "codecommit:GetCommit",
                  "codecommit:GetUploadArchiveStatus",
                  "codecommit:UploadArchive"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codedeploy:CreateDeployment",
                  "codedeploy:GetApplicationRevision",
                  "codedeploy:GetDeployment",
                  "codedeploy:GetDeploymentConfig",
                  "codedeploy:RegisterApplicationRevision"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "elasticbeanstalk:*",
                  "ec2:*",
                  "elasticloadbalancing:*",
                  "autoscaling:*",
                  "cloudwatch:*",
                  "s3:*",
                  "sns:*",
                  "cloudformation:*",
                  "rds:*",
                  "sqs:*",
                  "ecs:*",
                  "waf:*",
                  "waf-regional:*",
                  "iam:PassRole"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "lambda:InvokeFunction",
                  "lambda:ListFunctions"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "opsworks:CreateDeployment",
                  "opsworks:DescribeApps",
                  "opsworks:DescribeCommands",
                  "opsworks:DescribeDeployments",
                  "opsworks:DescribeInstances",
                  "opsworks:DescribeStacks",
                  "opsworks:UpdateApp",
                  "opsworks:UpdateStack"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "cloudformation:CreateStack",
                  "cloudformation:DeleteStack",
                  "cloudformation:DescribeStacks",
                  "cloudformation:UpdateStack",
                  "cloudformation:CreateChangeSet",
                  "cloudformation:DeleteChangeSet",
                  "cloudformation:DescribeChangeSet",
                  "cloudformation:ExecuteChangeSet",
                  "cloudformation:SetStackPolicy",
                  "cloudformation:ValidateTemplate",
                  "iam:PassRole"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codebuild:BatchGetBuilds",
                  "codebuild:StartBuild"
                ],
                "Resource": "*",
                "Effect": "Allow"
              }
            ],
            "Version": "2012-10-17"
          },
          "Roles": [
            {
              "Ref": "codePipeLineServiceRole"
            }
          ]
        }
      },
      "codeBuildServiceRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess"
          ],
          "Path": "/",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "codebuild.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          }
        }
      },
      "codeBuildServicePolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Path": "/",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "logs:*",
                  "ec2:CreateNetworkInterface",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DeleteNetworkInterface",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeDhcpOptions",
                  "ec2:DescribeVpcs",
                  "ec2:CreateNetworkInterfacePermission"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:AttachVolume",
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CopyImage",
                  "ec2:CreateImage",
                  "ec2:CreateKeypair",
                  "ec2:CreateSecurityGroup",
                  "ec2:CreateSnapshot",
                  "ec2:CreateTags",
                  "ec2:CreateVolume",
                  "ec2:DeleteKeypair",
                  "ec2:DeleteSecurityGroup",
                  "ec2:DeleteSnapshot",
                  "ec2:DeleteVolume",
                  "ec2:DeregisterImage",
                  "ec2:DescribeImageAttribute",
                  "ec2:DescribeImages",
                  "ec2:DescribeInstances",
                  "ec2:DescribeRegions",
                  "ec2:DescribeSnapshots",
                  "ec2:DescribeTags",
                  "ec2:DescribeVolumes",
                  "ec2:DetachVolume",
                  "ec2:GetPasswordData",
                  "ec2:ModifyImageAttribute",
                  "ec2:ModifyInstanceAttribute",
                  "ec2:ModifySnapshotAttribute",
                  "ec2:RegisterImage",
                  "ec2:RunInstances",
                  "ec2:StopInstances",
                  "ec2:TerminateInstances"
                ],
                "Resource": "*"
              },
              {
                "Sid": "CloudWatchLogsPolicy",
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": [
                  "*"
                ]
              },
              {
                "Sid": "CodeCommitPolicy",
                "Effect": "Allow",
                "Action": [
                  "codecommit:GitPull"
                ],
                "Resource": [
                  "*"
                ]
              },
              {
                "Sid": "S3GetObjectPolicy",
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject",
                  "s3:GetObjectVersion"
                ],
                "Resource": [
                  "*"
                ]
              },
              {
                "Sid": "S3PutObjectPolicy",
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                  "s3:GetObjectAcl"
                ],
                "Resource": [
                  "*"
                ]
              },
              {
                "Sid": "AllowUseOfTheKey",
                "Effect": "Allow",
                "Action": [
                  "kms:Encrypt",
                  "kms:Decrypt",
                  "kms:ReEncrypt*",
                  "kms:GenerateDataKey*",
                  "kms:DescribeKey"
                ],
                "Resource": [
                  {
                    "Ref": "ProductionKmsKeyId"
                  }
                ]
              },
              {
                "Sid": "AllowAttachmentOfPersistentResources",
                "Effect": "Allow",
                "Action": [
                  "kms:CreateGrant",
                  "kms:ListGrants",
                  "kms:RevokeGrant"
                ],
                "Resource": [
                  {
                    "Ref": "ProductionKmsKeyId"
                  }
                ],
                "Condition": {
                  "Bool": {
                    "kms:GrantIsForAWSResource": true
                  }
                }
              }
            ]
          },
          "Roles": [
            {
              "Ref": "codeBuildServiceRole"
            }
          ]
        }
      },
      "codePipeLineServiceDeployRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/AWSCodePipelineFullAccess"
          ],
          "Path": "/",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "codepipeline.amazonaws.com",
                    "cloudformation.amazonaws.com"
                  ]
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      },
      "codePipeLineServiceDeployPolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "s3:GetObject",
                  "s3:GetObjectVersion",
                  "s3:GetBucketVersioning"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "s3:PutObject"
                ],
                "Resource": [
                  "*"
                ],
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codecommit:CancelUploadArchive",
                  "codecommit:GetBranch",
                  "codecommit:GetCommit",
                  "codecommit:GetUploadArchiveStatus",
                  "codecommit:UploadArchive"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codedeploy:CreateDeployment",
                  "codedeploy:GetApplicationRevision",
                  "codedeploy:GetDeployment",
                  "codedeploy:GetDeploymentConfig",
                  "codedeploy:RegisterApplicationRevision"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "elasticbeanstalk:*",
                  "ec2:*",
                  "elasticloadbalancing:*",
                  "autoscaling:*",
                  "cloudwatch:*",
                  "s3:*",
                  "sns:*",
                  "cloudformation:*",
                  "rds:*",
                  "sqs:*",
                  "ecs:*",
                  "waf:*",
                  "waf-regional:*",
                  "iam:PassRole",
                  "iam:Create*",
                  "iam:Attach*",
                  "iam:Add*",
                  "iam:Delete*",
                  "iam:Get*",
                  "iam:Describe*",
                  "iam:List*",
                  "iam:Update*",
                  "iam:Remove*",
                  "route53:ListHostedZones",
                  "route53:GetHostedZone",
                  "route53:ChangeResourceRecordSets",
                  "route53:ListResourceRecordSets",
                  "route53:GetChangeRequest",
                  "route53:GetChange",
                  "cloudfront:Create*",
                  "cloudfront:Delete*",
                  "cloudfront:Tag*",
                  "cloudfront:Untag*",
                  "cloudfront:Update*",
                  "cloudfront:Get*",
                  "cloudfront:List*"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "lambda:InvokeFunction",
                  "lambda:ListFunctions"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "opsworks:CreateDeployment",
                  "opsworks:DescribeApps",
                  "opsworks:DescribeCommands",
                  "opsworks:DescribeDeployments",
                  "opsworks:DescribeInstances",
                  "opsworks:DescribeStacks",
                  "opsworks:UpdateApp",
                  "opsworks:UpdateStack"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "cloudformation:CreateStack",
                  "cloudformation:DeleteStack",
                  "cloudformation:DescribeStacks",
                  "cloudformation:UpdateStack",
                  "cloudformation:CreateChangeSet",
                  "cloudformation:DeleteChangeSet",
                  "cloudformation:DescribeChangeSet",
                  "cloudformation:ExecuteChangeSet",
                  "cloudformation:SetStackPolicy",
                  "cloudformation:ValidateTemplate",
                  "iam:PassRole"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codebuild:BatchGetBuilds",
                  "codebuild:StartBuild"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "kms:CreateKey",
                  "kms:CreateAlias",
                  "kms:ListAliases",
                  "kms:PutKeyPolicy",
                  "kms:TagResource",
                  "kms:UntagResource"
                ],
                "Resource": "*",
                "Effect": "Allow"
              }
            ],
            "Version": "2012-10-17"
          },
          "Roles": [
            {
              "Ref": "codePipeLineServiceDeployRole"
            }
          ]
        }
      },
      "inputBucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "AccessControl": "Private",
          "VersioningConfiguration": {
            "Status": "Enabled"
          },
          "BucketEncryption": {
            "ServerSideEncryptionConfiguration": [
              {
                "ServerSideEncryptionByDefault": {
                  "KMSMasterKeyID": {
                    "Ref": "kmsKey"
                  },
                  "SSEAlgorithm": "aws:kms"
                }
              }
            ]
          }
        }
      },
      "outputBucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "AccessControl": "Private",
          "VersioningConfiguration": {
            "Status": "Enabled"
          }
        }
      },
      "outputBucketPolicy": {
        "Type": "AWS::S3::BucketPolicy",
        "Properties": {
          "Bucket": {
            "Ref": "outputBucket"
          },
          "PolicyDocument": {
            "Statement": [
              {
                "Sid": "DenyUnEncryptedObjectUploads",
                "Effect": "Deny",
                "Principal": "*",
                "Action": "s3:PutObject",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "outputBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                "Condition": {
                  "StringNotEquals": {
                    "s3:x-amz-server-side-encryption": "aws:kms",
                    "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                      "Fn::GetAtt": [
                        "kmsKey",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "kmsKey": {
        "Type": "AWS::KMS::Key",
        "Properties": {
          "Description": "Key for encrypting resources in this stack",
          "Enabled": true,
          "EnableKeyRotation": true,
          "KeyPolicy": {
            "Version": "2012-10-17",
            "Id": "key-default-1",
            "Statement": [
              {
                "Sid": "Allow administration of the key",
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":root"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":role/aab-administrator"
                        ]
                      ]
                    }
                  ]
                },
                "Action": [
                  "kms:Create*",
                  "kms:Describe*",
                  "kms:Enable*",
                  "kms:List*",
                  "kms:Put*",
                  "kms:Update*",
                  "kms:Revoke*",
                  "kms:Disable*",
                  "kms:Get*",
                  "kms:Delete*",
                  "kms:ScheduleKeyDeletion",
                  "kms:CancelKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource"
                ],
                "Resource": "*"
              },
              {
                "Sid": "Allow direct access to key metadata to the account",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:iam::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":root"
                      ]
                    ]
                  }
                },
                "Action": [
                  "kms:Describe*",
                  "kms:Get*",
                  "kms:List*"
                ],
                "Resource": "*"
              },
              {
                "Sid": "Allow use of the key",
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":root"
                        ]
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "codePipeLineServiceRole",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "codeBuildServiceRole",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "codePipeLineServiceDeployRole",
                        "Arn"
                      ]
                    }
                  ]
                },
                "Action": [
                  "kms:Encrypt",
                  "kms:Decrypt",
                  "kms:ReEncrypt*",
                  "kms:GenerateDataKey*",
                  "kms:DescribeKey"
                ],
                "Resource": "*"
              },
              {
                "Sid": "Allow attachment of persistent resources",
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":root"
                        ]
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "codePipeLineServiceRole",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "codeBuildServiceRole",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "codePipeLineServiceDeployRole",
                        "Arn"
                      ]
                    }
                  ]
                },
                "Action": [
                  "kms:CreateGrant",
                  "kms:ListGrants",
                  "kms:RevokeGrant"
                ],
                "Resource": "*",
                "Condition": {
                  "Bool": {
                    "kms:GrantIsForAWSResource": true
                  }
                }
              },
              {
                  "Sid": "Allow use of the key",
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": [
                      "arn:aws:iam::yyyyyyyyyyy:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling"
                    ]
                  },
                  "Action": [
                    "kms:Encrypt",
                    "kms:Decrypt",
                    "kms:ReEncrypt*",
                    "kms:GenerateDataKey*",
                    "kms:DescribeKey"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "Allow attachment of persistent resources",
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": [
                      "arn:aws:iam::yyyyyyyyyy:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling"
                    ]
                  },
                  "Action": [
                    "kms:CreateGrant"
                  ],
                  "Resource": "*",
                  "Condition": {
                    "Bool": {
                      "kms:GrantIsForAWSResource": true
                    }
                  }
                }
            ]
          }
        }
      },
      "kmsKeyAlias": {
        "Type": "AWS::KMS::Alias",
        "Properties": {
          "AliasName": {
            "Fn::Join": [
              "",
              [
                "alias/",
                {
                  "Ref": "AWS::StackName"
                }
              ]
            ]
          },
          "TargetKeyId": {
            "Ref": "kmsKey"
          }
        }
      },
      "codeBuildProjectBuildAMI": {
        "Type": "AWS::CodeBuild::Project",
        "Properties": {
          "Tags": [
            {
              "Key": "BBBB",
              "Value": "XXX"
            },
            {
              "Key": "XXX",
              "Value": "X"
            },
            {
              "Key": "XXXX",
              "Value": "YY"
            },
            {
              "Key": "YYYY",
              "Value": "XXXX"
            },
            {
              "Key": "TTTT",
              "Value": "I"
            },
            {
              "Key": "BBBB",
              "Value": "BBB"
            },
            {
              "Key": "XXX",
              "Value": "X"
            },
            {
              "Key": "Name",
              "Value": {
                "Ref": "AWS::StackName"
              }
            }
          ],
          "Artifacts": {
            "Type": "CODEPIPELINE"
          },
          "Description": "Build AMI",
          "EncryptionKey": {
            "Ref": "kmsKey"
          },
          "Environment": {
            "ComputeType": "BUILD_GENERAL1_SMALL",
            "Image": "aws/codebuild/ubuntu-base:14.04",
            "PrivilegedMode": false,
            "Type": "LINUX_CONTAINER",
            "EnvironmentVariables": [
              {
                "Name": "PACKER_SUBNET_ID",
                "Value": {
                  "Fn::ImportValue": "VPCCreate-PrivateSubnet1Id"
                }
              },
              {
                "Name": "PACKER_VPC_ID",
                "Value": {
                  "Fn::ImportValue": "VPCCreate-VpcId"
                }
              },
              {
                "Name": "PACKER_KMS_ID",
                "Value": {
                  "Ref": "kmsKey"
                }
              }
            ]
          },
          "ServiceRole": {
            "Ref": "codeBuildServiceRole"
          },
          "Source": {
            "Type": "CODEPIPELINE"
          },
          "VpcConfig": {
            "SecurityGroupIds": [
              {
                "Fn::GetAtt": [
                  "codeBuildSecurityGroup",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Fn::ImportValue": "VPCCreate-PrivateSubnet1Id"
              },
              {
                "Fn::ImportValue": "VPCCreate-PrivateSubnet2Id"
              },
              {
                "Fn::ImportValue": "VPCCreate-PrivateSubnet3Id"
              }
            ],
            "VpcId": {
              "Fn::ImportValue": "VPCCreate-VpcId"
            }
          }
        }
      },
      "codeBuildProjectReleaseProd": {
        "Type": "AWS::CodeBuild::Project",
        "Properties": {
          "Tags": [
            {
              "Key": "X",
              "Value": "X"
            },
            {
              "Key": "Name",
              "Value": {
                "Ref": "AWS::StackName"
              }
            }
          ],
          "Artifacts": {
            "Type": "CODEPIPELINE"
          },
          "Description": "Build AMI",
          "EncryptionKey": {
            "Ref": "kmsKey"
          },
          "Environment": {
            "ComputeType": "BUILD_GENERAL1_SMALL",
            "Image": "aws/codebuild/ubuntu-base:14.04",
            "PrivilegedMode": false,
            "Type": "LINUX_CONTAINER",
            "EnvironmentVariables": [
              {
                "Name": "PACKER_SUBNET_ID",
                "Value": {
                  "Fn::ImportValue": "VPCCreate-PrivateSubnet1Id"
                }
              },
              {
                "Name": "PACKER_VPC_ID",
                "Value": {
                  "Fn::ImportValue": "VPCCreate-VpcId"
                }
              },
              {
                "Name": "PACKER_KMS_ID",
                "Value": {
                  "Ref": "kmsKey"
                }
              },
              {
                "Name": "PRODUCTION_URL",
                "Value": {
                  "Ref": "ProductionS3URL"
                }
              }
            ]
          },
          "ServiceRole": {
            "Ref": "codeBuildServiceRole"
          },
          "Source": {
            "Type": "CODEPIPELINE",
            "BuildSpec": "buildspec.build_prod.yml"
          },
          "VpcConfig": {
            "SecurityGroupIds": [
              {
                "Fn::GetAtt": [
                  "codeBuildSecurityGroup",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Fn::ImportValue": "VPCCreate-PrivateSubnet1Id"
              },
              {
                "Fn::ImportValue": "VPCCreate-PrivateSubnet2Id"
              },
              {
                "Fn::ImportValue": "VPCCreate-PrivateSubnet3Id"
              }
            ],
            "VpcId": {
              "Fn::ImportValue": "VPCCreate-VpcId"
            }
          }
        }
      },
      "codeBuildSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": {
            "Ref": "AWS::StackName"
          },
          "SecurityGroupEgress": [
            {
              "IpProtocol": "-1",
              "CidrIp": "0.0.0.0/0"
            }
          ],
          "SecurityGroupIngress": [],
          "VpcId": {
            "Fn::ImportValue": "VPCCreate-VpcId"
          }
        }
      },
      "codePipeline": {
        "Type": "AWS::CodePipeline::Pipeline",
        "Properties": {
          "ArtifactStore": {
            "EncryptionKey": {
              "Id": {
                "Ref": "kmsKey"
              },
              "Type": "KMS"
            },
            "Location": {
              "Ref": "outputBucket"
            },
            "Type": "S3"
          },
          "RestartExecutionOnUpdate": false,
          "RoleArn": {
            "Fn::GetAtt": [
              "codePipeLineServiceRole",
              "Arn"
            ]
          },
          "Stages": [
            {
              "Name": "Source",
              "Actions": [
                {
                  "ActionTypeId": {
                    "Category": "Source",
                    "Owner": "AWS",
                    "Provider": "CodeCommit",
                    "Version": "1"
                  },
                  "Configuration": {
                    "RepositoryName": {
                      "Fn::GetAtt": [
                        "codeCommitRepo",
                        "Name"
                      ]
                    },
                    "BranchName": "master"
                  },
                  "Name": "Source",
                  "OutputArtifacts": [
                    {
                      "Name": "sourceArtifact"
                    }
                  ]
                }
              ]
            },
            {
              "Name": "Build",
              "Actions": [
                {
                  "Name": "BuildAMI",
                  "ActionTypeId": {
                    "Category": "Build",
                    "Owner": "AWS",
                    "Provider": "CodeBuild",
                    "Version": 1
                  },
                  "Configuration": {
                    "ProjectName": {
                      "Ref": "codeBuildProjectBuildAMI"
                    }
                  },
                  "InputArtifacts": [
                    {
                      "Name": "sourceArtifact"
                    }
                  ],
                  "OutputArtifacts": [
                    {
                      "Name": "buildArtifacts"
                    }
                  ]
                }
              ]
            },
            {
              "Name": "DeployDev",
              "Actions": [
                {
                  "Name": "DeployStackDev",
                  "ActionTypeId": {
                    "Category": "Deploy",
                    "Owner": "AWS",
                    "Provider": "CloudFormation",
                    "Version": 1
                  },
                  "Configuration": {
                    "ActionMode": "CREATE_UPDATE",
                    "Capabilities": "CAPABILITY_NAMED_IAM",
                    "OutputFileName": "deploy_stack_dev.json",
                    "RoleArn": {
                      "Fn::GetAtt": [
                        "codePipeLineServiceDeployRole",
                        "Arn"
                      ]
                    },
                    "StackName": "XXXX-YYY-ZZZ",
                    "TemplatePath": "buildArtifacts::infra_cfn.json",
                    "TemplateConfiguration": "buildArtifacts::infra_config_cfn.dev.json"
                  },
                  "InputArtifacts": [
                    {
                      "Name": "buildArtifacts"
                    }
                  ]
                }
              ]
            },
            {
              "Name": "DeployDTA",
              "Actions": [
                {
                  "ActionTypeId": {
                    "Category": "Approval",
                    "Owner": "AWS",
                    "Provider": "Manual",
                    "Version": "1"
                  },
                  "Configuration": {
                    "NotificationArn": {
                      "Ref": "dtaNotificationTopic"
                    },
                    "CustomData": "Approval or Reject new AMIs"
                  },
                  "Name": "Approval",
                  "InputArtifacts": [],
                  "OutputArtifacts": [],
                  "RunOrder": 1
                },
                {
                  "Name": "DeployStackDTA",
                  "ActionTypeId": {
                    "Category": "Deploy",
                    "Owner": "AWS",
                    "Provider": "CloudFormation",
                    "Version": 1
                  },
                  "Configuration": {
                    "ActionMode": "CREATE_UPDATE",
                    "Capabilities": "CAPABILITY_NAMED_IAM",
                    "OutputFileName": "deploy_stack_dta.json",
                    "RoleArn": {
                      "Fn::GetAtt": [
                        "codePipeLineServiceDeployRole",
                        "Arn"
                      ]
                    },
                    "StackName": "XXXX-VVVV",
                    "TemplatePath": "buildArtifacts::infra_cfn.json",
                    "TemplateConfiguration": "buildArtifacts::infra_config_cfn.dta.json"
                  },
                  "InputArtifacts": [
                    {
                      "Name": "buildArtifacts"
                    }
                  ],
                  "RunOrder": 2
                }
              ]
            },
            {
              "Name": "DeployPROD",
              "Actions": [
                {
                  "Name": "ReleaseProd",
                  "ActionTypeId": {
                    "Category": "Build",
                    "Owner": "AWS",
                    "Provider": "CodeBuild",
                    "Version": 1
                  },
                  "Configuration": {
                    "ProjectName": {
                      "Ref": "codeBuildProjectReleaseProd"
                    }
                  },
                  "InputArtifacts": [
                    {
                      "Name": "sourceArtifact"
                    }
                  ],
                  "OutputArtifacts": [
                    {
                      "Name": "buildArtifactsPROD"
                    }
                  ],
                  "RunOrder": 1
                }
              ]
            }
          ]
        }
      },
      "codeCommitRepo": {
        "Type": "AWS::CodeCommit::Repository",
        "Properties": {
          "RepositoryName": {
            "Ref": "AWS::StackName"
          }
        }
      },
      "dtaNotificationSubscriptionYYYY": {
        "Type": "AWS::SNS::Subscription",
        "Properties": {
          "Endpoint": "YYYY",
          "Protocol": "email",
          "TopicArn": {
            "Ref": "dtaNotificationTopic"
          }
        }
      },
  
      "dtaNotificationTopic": {
        "Type": "AWS::SNS::Topic",
        "Properties": {}
      }
    },
    "Outputs": {
      "codePipeLineServiceDeployRoleArn": {
        "Description": "Role ARN of the deployer role",
        "Value": {
          "Fn::GetAtt": [
            "codePipeLineServiceDeployRole",
            "Arn"
          ]
        },
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-codePipeLineServiceDeployRole"
          }
        }
      }
    }
  }